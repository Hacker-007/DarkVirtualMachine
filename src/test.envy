// Java

public class CanDrive {

    public static void main(String[] args) {
        int age = 16;
        int legalLimit = 18;
        if(canDrive(age, legal_limit)) {
            System.out.println("You Can Drive!");
        } else {
            System.out.println("You Can Not Drive Yet. Sorry!");
        }
    }

    public static boolean canDrive(int age, int legalLimit) {
        return age >= legalLimit;
    }

    public static boolean canDrive(Person person, int legalLimit) {
        return canDrive(person.age, legalLimit);
    }

    public static class Person {
        String name;
        int age;

        public Person(String name, int age) {
            this.name = name;
            this.age = age;
        }

        public static void sayHello(other: Person) {
            System.out.println("Hello, " + other.name + "!");
        }
    }
}

// Rust
pub struct Person {
    name: String,
    age: u32,
}

impl Person {
    pub fn new(name: String, age: u32) -> Person {
        Person {
            name,
            age,
        }
    }

    pub fn say_hello(other: &Person) {
        println!("Hello, {}!", other.name)
    }
}

fn can_drive(age: u32, legal_limit: u32) -> bool {
    age >= legal_limit
}

let age = 16;
let legal_limit = 18;
if can_drive(age, legal_limit) {
    println!("You Can Drive!");
} else {
    println!("You Can Not Drive Yet. Sorry!");
}

-- Envious --

define Person(name: string, age: int) => {
    say_hello(other: Person) = printn($"Hello, {other.name}!")
}

can_drive(person: Person, legal_limit: int): boolean = can_drive(person.age, legal_limit)
can_drive(age: int, legal_limit: int): boolean = age >= legal_limit

let age = 16
let legal_limit = 18
if can_drive(age, legal_limit) {
    printn("You Can Drive!")
} else {
    printn("You Can Not Drive Yet. Sorry!")
}